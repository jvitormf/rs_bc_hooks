{"ast":null,"code":"import _slicedToArray from \"C:\\\\Temp\\\\Rocketseat\\\\Bootcamp\\\\Hooks\\\\hooks\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Temp\\\\Rocketseat\\\\Bootcamp\\\\Hooks\\\\hooks\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\n\nfunction App() {\n  const _useState = useState(['ReactJS', 'React Native']),\n        _useState2 = _slicedToArray(_useState, 2),\n        tech = _useState2[0],\n        setTech = _useState2[1];\n\n  function handleAdd() {\n    setTech([...tech, 'Node.js']);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, tech.map(t => React.createElement(\"li\", {\n    key: t,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, t))), React.createElement(\"button\", {\n    type: \"buttom\",\n    onClick: handleAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Adicionar\"));\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Temp\\Rocketseat\\Bootcamp\\Hooks\\hooks\\src\\App.js"],"names":["React","useState","App","tech","setTech","handleAdd","map","t"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACaD,QAAQ,CAAC,CAAC,SAAD,EAAY,cAAZ,CAAD,CADrB;AAAA;AAAA,QACJE,IADI;AAAA,QACEC,OADF;;AAGX,WAASC,SAAT,GAAqB;AACjBD,IAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAU,SAAV,CAAD,CAAP;AACH;;AAED,SACI,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,IAAI,CAACG,GAAL,CAASC,CAAC,IACP;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaA,CAAb,CADH,CADL,CADJ,EAMI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEF,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANJ,CADJ;AAYH;;AAED,eAAeH,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n    const [tech, setTech] = useState(['ReactJS', 'React Native']);\n\n    function handleAdd() {\n        setTech([...tech, 'Node.js']);\n    }\n\n    return (\n        <>\n            <ul>\n                {tech.map(t => (\n                    <li key={t}>{t}</li>\n                ))}\n            </ul>\n            <button type=\"buttom\" onClick={handleAdd}>\n                Adicionar\n            </button>\n        </>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}