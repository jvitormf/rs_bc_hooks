{"ast":null,"code":"import _slicedToArray from \"C:\\\\Temp\\\\Rocketseat\\\\Bootcamp\\\\Hooks\\\\hooks\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Temp\\\\Rocketseat\\\\Bootcamp\\\\Hooks\\\\hooks\\\\src\\\\App.js\";\nimport React, { useState, useEffect, useMemo } from 'react';\n\nfunction App() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        tech = _useState2[0],\n        setTech = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newTech = _useState4[0],\n        setNewTech = _useState4[1];\n\n  function handleAdd() {\n    setTech([...tech, newTech]);\n    setNewTech('');\n  }\n\n  useEffect(() => {\n    const storageTech = localStorage.getItem('tech');\n\n    if (storageTech) {\n      setTech(JSON.parse(storageTech));\n    }\n\n    return () => {};\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('tech', JSON.stringify(tech));\n  }, [tech]);\n  const techSize = useMemo(() => tech.length, [tech]);\n  return React.createElement(React.Fragment, null, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, tech.map(t => React.createElement(\"li\", {\n    key: t,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, t))), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Voce tem \", techSize, \" tecnologias\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    value: newTech,\n    onChange: e => setNewTech(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Adicionar\"));\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Temp\\Rocketseat\\Bootcamp\\Hooks\\hooks\\src\\App.js"],"names":["React","useState","useEffect","useMemo","App","tech","setTech","newTech","setNewTech","handleAdd","storageTech","localStorage","getItem","JSON","parse","setItem","stringify","techSize","length","map","t","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,OAArC,QAAoD,OAApD;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACaH,QAAQ,CAAC,EAAD,CADrB;AAAA;AAAA,QACJI,IADI;AAAA,QACEC,OADF;;AAAA,qBAEmBL,QAAQ,CAAC,EAAD,CAF3B;AAAA;AAAA,QAEJM,OAFI;AAAA,QAEKC,UAFL;;AAIX,WAASC,SAAT,GAAqB;AACjBH,IAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUE,OAAV,CAAD,CAAP;AACAC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACH;;AAEDN,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAApB;;AAEA,QAAIF,WAAJ,EAAiB;AACbJ,MAAAA,OAAO,CAACO,IAAI,CAACC,KAAL,CAAWJ,WAAX,CAAD,CAAP;AACH;;AAED,WAAO,MAAM,CAAE,CAAf;AACH,GARQ,EAQN,EARM,CAAT;AAUAR,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,YAAY,CAACI,OAAb,CAAqB,MAArB,EAA6BF,IAAI,CAACG,SAAL,CAAeX,IAAf,CAA7B;AACH,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAIA,QAAMY,QAAQ,GAAGd,OAAO,CAAC,MAAME,IAAI,CAACa,MAAZ,EAAoB,CAACb,IAAD,CAApB,CAAxB;AAEA,SACI,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,IAAI,CAACc,GAAL,CAASC,CAAC,IACP;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaA,CAAb,CADH,CADL,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAkBH,QAAlB,iBANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAQI;AAAO,IAAA,KAAK,EAAEV,OAAd;AAAuB,IAAA,QAAQ,EAAEc,CAAC,IAAIb,UAAU,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EASI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEd,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATJ,CADJ;AAeH;;AAED,eAAeL,GAAf","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\n\nfunction App() {\n    const [tech, setTech] = useState([]);\n    const [newTech, setNewTech] = useState('');\n\n    function handleAdd() {\n        setTech([...tech, newTech]);\n        setNewTech('');\n    }\n\n    useEffect(() => {\n        const storageTech = localStorage.getItem('tech');\n\n        if (storageTech) {\n            setTech(JSON.parse(storageTech));\n        }\n\n        return () => {};\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem('tech', JSON.stringify(tech));\n    }, [tech]);\n\n    const techSize = useMemo(() => tech.length, [tech]);\n\n    return (\n        <>\n            <ul>\n                {tech.map(t => (\n                    <li key={t}>{t}</li>\n                ))}\n            </ul>\n            <strong>Voce tem {techSize} tecnologias</strong>\n            <br />\n            <input value={newTech} onChange={e => setNewTech(e.target.value)} />\n            <button type=\"button\" onClick={handleAdd}>\n                Adicionar\n            </button>\n        </>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}